#include "timer.h"

namespace lambda
{
  namespace utilities
  {
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Timer::Timer(bool run)
    {
      if (run == true)
      {
        reset();
      }
    }
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    void Timer::reset()
    {
      start_ = high_resolution_clock::now();
    }
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Time Timer::elapsed() const
    {
      return Time(std::chrono::duration_cast<milliseconds>(high_resolution_clock::now() - start_));
    }
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Time::Time(std::chrono::milliseconds ms) :
      ms_(ms)
    {
    }
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    double Time::seconds() const
    {
      return milliseconds() * 0.001;
    }
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    double Time::milliseconds() const
    {
      return (double)ms_.count();
    }
  }
}